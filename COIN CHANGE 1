class Solution {
public:

/*

//MEMOISATION
    int f(int idx,vector<int>& coins, int amount,vector<vector<int>> &dp){

       if(idx==0){
             
             if(amount%coins[idx]==0){

                 return amount/coins[idx];
             }
            
             else{
                 return 1e9;
             }


           
       }

       if(dp[idx][amount] !=-1){

           return dp[idx][amount];
       }
    

        int op1=0+f(idx-1,coins,amount,dp);

        int op2=1e9;
        if(coins[idx]<=amount){

            op2=1+f(idx,coins,amount-coins[idx],dp);
        }

        return dp[idx][amount]=min(op1,op2);
    }

    */

    int coinChange(vector<int>& coins, int amount) {
        
        //TABULATION
        int n=coins.size();
        vector<vector<int>> dp(n+1,vector<int>(amount+1,1e9));

        for(int j=0;j<=amount;j++){

            if(j%coins[0]==0){

                dp[0][j]=j/coins[0];
            }
        }


        for(int i=1;i<n;i++){

            for(int j=0;j<=amount;j++){

                    int op1=0+dp[i-1][j];

                    int op2=1e9;
                    if(coins[i]<=j){

                        op2=1+dp[i][j-coins[i]];
                    }

                     dp[i][j]=min(op1,op2);


            }
        }
        int ans= dp[n-1][amount];
        if(ans==1e9){
            return -1;
        }
        return ans;
    }
};
